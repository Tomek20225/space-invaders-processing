color[] colors = {
  color(237, 223, 23), // żółty
};

class Game {
  Player player;
  EnemyPlane plane;
  Barrier[] barriers = new Barrier[4];
  Bullet[] playerBullets = new Bullet[1];
  Bullet[] enemyBullets = new Bullet[3];
  int score = 0;
  int highestScore; // z pliku binarnego z historią wyników
  int level = 1;
  
  Game() {
    this.player = new Player(width / 2 - 8, height - 20, 26, 16);
    this.plane = new EnemyPlane(this.level);
    
    int barrierWidth = 44;
    float barriersDist = (width - (4 * barrierWidth)) / 5;
    float barrierX = barriersDist;
    for (int i = 0; i < barriers.length; i++) {
      this.barriers[i] = new Barrier(barrierX, height - 102);
      barrierX += barriersDist + barrierWidth;
    }
    
    for (int i = 0; i < this.playerBullets.length; i++) {
      this.playerBullets[i] = null;
    }
    
    for (int i = 0; i < this.enemyBullets.length; i++) {
      this.enemyBullets[i] = null;
    }
  }
  
  void showMenu() {
    stroke(255);
    line(0, 32 * 3, width, 32 * 3);
  }
  
  void play() {
    this.player.show();
    
    for (int i = 0; i < this.playerBullets.length; i++) {
      if (this.playerBullets[i] != null) {
        if (this.plane.isHit(this.playerBullets[i])) {
           this.playerBullets[i].explode();
           this.playerBullets[i] = null;
           continue;
        }
        
        if (this.playerBullets[i].isOutOfBounds()) {
          this.playerBullets[i] = null;
          continue;
        }
        
        this.playerBullets[i].show();
        this.playerBullets[i].move();
      }
    }
    
    for (int i = 0; i < this.enemyBullets.length; i++) {
      if (this.enemyBullets[i] != null) {
        if (this.enemyBullets[i].isOutOfBounds()) {
          this.enemyBullets[i] = null;
          continue;
        }
        
        this.enemyBullets[i].show();
        this.enemyBullets[i].move();
      }
      else {
        if (random(0, 1) >= 0.8) {
          this.shootPlayer();
        }
      }
    }
    
    for (int i = 0; i < barriers.length; i++) {
       this.barriers[i].show();
    }
  
    this.plane.show();
    this.plane.move();
  }
  
  void shootEnemies() {
    for (int i = 0; i < this.playerBullets.length; i++) {
      if (this.playerBullets[i] == null) {
        this.playerBullets[i] = new Bullet(this.player.x, this.player.y, "PLAYER");
      }
    }
  }
  
  void shootPlayer() {
    for (int i = 0; i < this.enemyBullets.length; i++) {
      if (this.enemyBullets[i] == null) {
        this.enemyBullets[i] = new Bullet(this.player.x, 180, "ENEMY");
        return;
      }
    }
  }
}
